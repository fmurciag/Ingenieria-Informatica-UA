function robot = DynamicParams(robot)

% Vectores desde el SR DH al CDG del eslabón
rdata = zeros (6,3);
rdata(1,:) = [0,0.1170,0];
rdata(2,:) = [-0.3210,-0.0300,0];
rdata(3,:) = [0,0, 0.0485];
rdata(4,:) = [0,0.1122,0];
rdata(5,:) = [0,0,-0.0420];
rdata(6,:) = [0,0,-0.0480];

IData = LoadInertiaData; % Intoducimos en IData los valores de Inercia

mass = [9.29, 12.43, 4.86, 3.08, 2.07, 1.05];   % masas de los eslabones
Ixx = IData(:,1)';   % Valores de las matrices de inercia
Iyy = IData(:,2)';
Izz = IData(:,3)';
Ixy = IData(:,4)';
Iyz = IData(:,5)';
Ixz = IData(:,6)';
Jm = zeros(1,6);        % Inercia del motor
G = 50 * ones(1,6);     % Coeficiente de reducción del
B = zeros(1,6);         % Fricción viscosa
Tc_plus = zeros(1,6);   % Fricción de Coulomb
Tc_minus = zeros(1,6);  % Fricción de Coulomb

          
for i=1:6
    robot.links(i).m = mass(i);
    robot.links(i).r = rdata(i,:);
    robot.links(i).I = [Ixx(1,i) Ixy(1,i) Ixz(1,i);
                         Ixy(1,i) Iyy(1,i) Iyz(1,i);
                           Ixz(1,i) Iyz(1,i) Izz(1,i)];
    robot.links(i).Jm = Jm(i);
    robot.links(i).G = G(i);
    robot.links(i).B = B(i);
    robot.links(i).Tc = [Tc_plus(i); Tc_minus(i)];
end





function InertiaData = LoadInertiaData
% Use this function to calculate inertia data in standard DH notation
% Output: InertiaData = [Ixx, Iyy, Izz, Ixy, Iyz, Ixz]
data = GetInertiaData;

% Unfortunately, the above data was generated for link coordinate systems
% that are not aligned with the DH coordinate systems. Therefore, rotation
% matricies will be defined for each link that will transform the data
% above to the DH coordinate systems.
T(:,:,1) = rotx(-pi/2) * rotz(-pi/2);
T(:,:,2) = rotx(-pi/2);
T(:,:,3) = rotz(pi);
T(:,:,4) = rotx(-pi/2);
T(:,:,5) = eye(3);
T(:,:,6) = eye(3);

InertiaData = zeros(6,6);
for n = 1:6
    I = [data(n,1), data(n,2), data(n,3); data(n,2), data(n,4), data(n,5); ...
         data(n,3), data(n,5), data(n,6)];
    I = T(1:3,1:3,n) * I * T(1:3,1:3,n)';
    InertiaData(n,:) = [I(1,1),I(2,2),I(3,3),I(1,2),I(2,3),I(1,3)]; 
end



function data = GetInertiaData
% Inertia data generated by Sam from SolidWorks models of the links of the 
% PA10. Each row corresponds to a link and the columns are the inertial
% components:
%   Link(i) = [ Ixx, Ixy, Ixz, Iyy, Iyz, Izz ]
data = [0.13075775	-0.00000001	-0.00000001	0.10682179	-0.00000002	0.05280026; ...
        0.3782804	-0.00029527	-0.0201253	0.37582008	-0.00087555	0.06409578; ...
        0.05985722	0.00000002	-0.00000002	0.05773397	0.00181737	0.00837426; ...
        0.02826874	0	1.0E-08	0.0199375	0	0.01090199; ...
        0.00741334	0	-0.00001649	0.00698523	0	0.00301892; ...
        0.00135043	0	0	0.00135043	0	0.00058334];